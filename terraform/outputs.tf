# Output values for Terraform configuration

output "cluster_name" {
  description = "The name of the EKS cluster"
  value       = module.eks.cluster_name
}

output "cluster_endpoint" {
  description = "The endpoint URL of the EKS cluster"
  value       = module.eks.cluster_endpoint
  sensitive   = true
}

output "cluster_certificate_authority_data" {
  description = "The certificate authority data of the EKS cluster"
  value       = module.eks.cluster_certificate_authority_data
  sensitive   = true
}

output "cluster_security_group_id" {
  description = "The security group ID of the EKS cluster"
  value       = module.eks.cluster_security_group_id
}

output "cluster_iam_role_arn" {
  description = "The IAM role ARN of the EKS cluster"
  value       = module.eks.cluster_iam_role_arn
}

output "cluster_oidc_issuer_url" {
  description = "The OIDC issuer URL of the EKS cluster"
  value       = module.eks.cluster_oidc_issuer_url
}

output "cluster_platform_version" {
  description = "The platform version of the EKS cluster"
  value       = module.eks.cluster_platform_version
}

output "cluster_version" {
  description = "The Kubernetes version of the EKS cluster"
  value       = module.eks.cluster_version
}

output "node_groups" {
  description = "Information about the EKS managed node groups"
  value       = module.eks.eks_managed_node_groups
}

output "vpc_id" {
  description = "The ID of the VPC"
  value       = module.vpc.vpc_id
}

output "vpc_cidr_block" {
  description = "The CIDR block of the VPC"
  value       = module.vpc.vpc_cidr_block
}

output "private_subnets" {
  description = "The IDs of the private subnets"
  value       = module.vpc.private_subnets
}

output "public_subnets" {
  description = "The IDs of the public subnets"
  value       = module.vpc.public_subnets
}

output "nat_gateway_ids" {
  description = "The IDs of the NAT Gateways"
  value       = module.vpc.natgw_ids
}

output "internet_gateway_id" {
  description = "The ID of the Internet Gateway"
  value       = module.vpc.igw_id
}

output "cluster_primary_security_group_id" {
  description = "The cluster primary security group ID"
  value       = module.eks.cluster_primary_security_group_id
}

output "kubectl_config" {
  description = "kubectl config as generated by the module"
  value       = "aws eks update-kubeconfig --region ${data.aws_region.current.name} --name ${module.eks.cluster_name}"
}

output "aws_region" {
  description = "The AWS region"
  value       = data.aws_region.current.name
}

output "aws_account_id" {
  description = "The AWS account ID"
  value       = data.aws_caller_identity.current.account_id
}

# Monitoring outputs
output "prometheus_endpoint" {
  description = "Prometheus endpoint (if monitoring is enabled)"
  value       = var.enable_monitoring ? "http://prometheus.${module.eks.cluster_name}.local:9090" : null
}

output "grafana_endpoint" {
  description = "Grafana endpoint (if monitoring is enabled)"
  value       = var.enable_monitoring ? "http://grafana.${module.eks.cluster_name}.local:3000" : null
}

# Logging outputs
output "opensearch_endpoint" {
  description = "OpenSearch endpoint (if logging is enabled)"
  value       = var.enable_logging ? "http://opensearch.${module.eks.cluster_name}.local:9200" : null
}

# Application outputs
output "application_url" {
  description = "URL of the deployed application"
  value       = var.domain_name != "" ? "https://${var.domain_name}" : "http://${module.eks.cluster_name}.local"
}

# Security outputs
output "cluster_encryption_config" {
  description = "Cluster encryption configuration"
  value = {
    enabled = var.enable_encryption_at_rest
    key_arn = var.enable_encryption_at_rest ? "arn:aws:kms:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:key/*" : null
  }
}
