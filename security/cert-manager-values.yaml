# cert-manager configuration values for Helm chart

# Global configuration
global:
  leaderElection:
    namespace: cert-manager

# Image configuration
image:
  repository: quay.io/jetstack/cert-manager-controller
  tag: "v1.13.2"
  pullPolicy: IfNotPresent

# Webhook configuration
webhook:
  image:
    repository: quay.io/jetstack/cert-manager-webhook
    tag: "v1.13.2"
    pullPolicy: IfNotPresent
  
  # Resource configuration
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
    limits:
      memory: 128Mi
      cpu: 100m

# CA injector configuration
cainjector:
  image:
    repository: quay.io/jetstack/cert-manager-cainjector
    tag: "v1.13.2"
    pullPolicy: IfNotPresent
  
  # Resource configuration
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
    limits:
      memory: 128Mi
      cpu: 100m

# Resource configuration for main controller
resources:
  requests:
    memory: 64Mi
    cpu: 50m
  limits:
    memory: 128Mi
    cpu: 100m

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Configuration
config:
  # Cluster issuer configuration
  clusterIssuer:
    enabled: true
    name: letsencrypt-prod
    server: "https://acme-v02.api.letsencrypt.org/directory"
    email: "admin@mern-blog.com"
    
    # DNS01 challenge configuration for Route53
    dns01:
      enabled: true
      provider: route53
      region: us-west-2
      hostedZoneID: ""
    
    # HTTP01 challenge configuration
    http01:
      enabled: true
      ingressClass: alb

# Service account configuration
serviceAccount:
  create: true
  name: cert-manager
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT_ID:role/cert-manager-route53"

# RBAC configuration
rbac:
  create: true

# Cluster role configuration
clusterRole:
  create: true

# Cluster role binding configuration
clusterRoleBinding:
  create: true

# Webhook configuration
webhook:
  enabled: true
  port: 10250
  certManager:
    enabled: true
    issuer:
      name: cert-manager-webhook-ca
      kind: Issuer

# Prometheus metrics configuration
prometheus:
  enabled: true
  servicemonitor:
    enabled: true
    namespace: monitoring
    labels:
      app: cert-manager
    interval: 30s
    scrapeTimeout: 10s

# Startup API check configuration
startupapicheck:
  enabled: true
  image:
    repository: quay.io/jetstack/cert-manager-ctl
    tag: "v1.13.2"
    pullPolicy: IfNotPresent
  
  # Resource configuration
  resources:
    requests:
      memory: 32Mi
      cpu: 25m
    limits:
      memory: 64Mi
      cpu: 50m

# Feature gates
featureGates: ""

# Extra arguments
extraArgs:
  - --enable-certificate-owner-ref=true
  - --enable-gateway-api=true

# Environment variables
env: []

# Volume mounts
volumeMounts: []

# Volumes
volumes: []

# Pod annotations
podAnnotations: {}

# Service annotations
serviceAnnotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: cert-manager.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Service configuration
service:
  type: ClusterIP
  port: 9402
  targetPort: 9402
  annotations: {}

# Deployment configuration
deployment:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1
